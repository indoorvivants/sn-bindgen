name: CI
on:
  push:
    branches: ["main"]
    tags: ["v*"]
  pull_request:
    branches: ["*"]

env: 
  JAVA_OPTS: "-Xmx2G"
  SN_RELEASE: fast
  JABBA_INDEX: 'https://github.com/typelevel/jdk-index/raw/main/index.json'

jobs:
  build:
    name: CI
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            output_filename: bindgen-out
            uploaded_filename: sn-bindgen-osx-x86_64
            llvm_bin_path: /usr/local/opt/llvm/bin
            sbt_shell: bash

          - os: ubuntu-latest
            output_filename: bindgen-out
            uploaded_filename: sn-bindgen-linux-x86_64
            llvm_bin_path: /usr/lib/llvm-13/bin
            sbt_shell: bash

          - os: windows-2022
            output_filename: bindgen-out.exe
            uploaded_filename: sn-bindgen-windows-x86_64
            llvm_bin_path: C:\Program Files\LLVM\bin
            sbt_shell: cmd
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: coursier/cache-action@v6      
      - uses: olafurpg/setup-scala@v13
        with:
          java-version: graalvm-ce-java17

      - name: Setup Unix-like
        run: ./build/setup_unix.sh
        if: (!startsWith(matrix.os, "windows-"))
      
      - name: Configure Pagefile
        uses: al-cheb/configure-pagefile-action@v1.2
        with:
          minimum-size: 4GB
          maximum-size: 16GB
        if: startsWith(matrix.os, "windows-")

      - name: Setup windows
        shell: pwsh
        run: |
          choco install llvm --version=13.0.0 --allow-downgrade
          choco install sbt --version=1.6.1
          clang --version
        if: startsWith(matrix.os, "windows-")


      - name: Run tests
        run: sbt 'show nativeConfig' ci
        shell: ${{ matrix.sbt_shell }}
        env: 
          LLVM_BIN: ${{ matrix.llvm_bin_path }}
      
      - name: Compile examples
        run: sbt examples/compile
        shell: ${{ matrix.sbt_shell }}
        env: 
          LLVM_BIN: ${{ matrix.llvm_bin_path }}

      - name: Upload artifacts
        uses: actions/upload-artifact@master
        with:
          path: bindgen/target/scala-3.1.1/${{ matrix.output_filename }}
          name: ${{ matrix.uploaded_filename }}
  
  # build-windows:
  #   name: Windows CI
  #   strategy:
  #     fail-fast: false
  #   runs-on: windows-2022
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: coursier/cache-action@v6      
  #     - uses: olafurpg/setup-scala@v13
  #       with:
  #         java-version: graalvm-ce-java17

  #     - name: Configure Pagefile
  #       uses: al-cheb/configure-pagefile-action@v1.2
  #       with:
  #         minimum-size: 4GB
  #         maximum-size: 16GB

  #     - name: Install LLVM
  #       shell: pwsh
  #       run: |
  #         choco install llvm --version=13.0.0 --allow-downgrade
  #         choco install sbt --version=1.6.1
  #         clang --version

  #     - name: Run tests
  #       run: sbt "show nativeConfig" ci
  #       shell: cmd
  #       env: 
  #         LLVM_BIN: C:\Program Files\LLVM\bin
      
  #     - name: Compile examples
  #       run: sbt examples/compile
  #       shell: cmd
  #       env: 
  #         LLVM_BIN: C:\Program Files\LLVM\bin

  #     - name: Upload artifacts
  #       uses: actions/upload-artifact@master
  #       with:
  #         path: bindgen/target/scala-3.1.1/bindgen-out.exe
  #         name: sn-bindgen-windows-x86_64
      
  pre_release_check:
    needs: [build]
    name: Check releasable artifacts
    runs-on: ubuntu-latest
    env: 
      BINARIES: /tmp/binaries/
    steps:
      - uses: actions/checkout@v2
      - uses: coursier/cache-action@v6

      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          path: /tmp/binaries

      - name: Check published artifacts
        run: |
          sbt versionDump binaryArtifacts/publishLocal iface3/publishLocal iface/publishLocal iface2_12/publishLocal
          curl -fLo cs https://git.io/coursier-cli-"$(uname | tr LD ld)"
          chmod +x cs
          ./cs resolve com.indoorvivants:bindgen-interface_2.13:$(cat version)
          ./cs resolve com.indoorvivants:bindgen-interface_3:$(cat version)
          ./cs resolve com.indoorvivants:bindgen-interface_2.12:$(cat version)
          ./cs fetch com.indoorvivants:bindgen_native0.4_3:$(cat version) --classifier osx-x86_64 --artifact-type jar
          ./cs fetch com.indoorvivants:bindgen_native0.4_3:$(cat version) --classifier linux-x86_64 --artifact-type jar
          ./cs fetch com.indoorvivants:bindgen_native0.4_3:$(cat version) --classifier windows-x86_64 --artifact-type jar

  release:
    needs: [pre_release_check]
    name: Release
    if: startsWith(github.ref, 'refs/tags/v') || (github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    env: 
      BINARIES: /tmp/binaries/
    steps:
      - uses: actions/checkout@v2
      - uses: coursier/cache-action@v6
      - uses: olafurpg/setup-scala@v13
        with:
          java-version: graalvm-ce-java17

      - run: git fetch --unshallow

      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          path: /tmp/binaries

      - name: Publish
        run: |
          sbt ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
