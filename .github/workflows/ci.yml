name: CI
on:
  push:
    branches: ["main"]
    tags: ["v*"]
  pull_request:
    branches: ["*"]

env: 
  JAVA_OPTS: "-Xmx4G"
  JVM_OPTS: "-Xmx4G"
  SBT_OPTS: "-Xmx4G"
  SCALANATIVE_MAX_SIZE: 2G
  SN_RELEASE: fast

jobs:
  build:
    name: CI on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-11
            output_filename: bindgen-out
            uploaded_filename: sn-bindgen-osx-x86_64
            llvm_bin_path: /usr/local/opt/llvm/bin

          - os: ubuntu-20.04
            output_filename: bindgen-out
            uploaded_filename: sn-bindgen-linux-x86_64
            llvm_bin_path: /usr/lib/llvm-13/bin

          - os: windows-2022
            output_filename: bindgen-out.exe
            uploaded_filename: sn-bindgen-windows-x86_64
            llvm_bin_path: C:\Program Files\LLVM\bin
    runs-on: ${{ matrix.os }}
    steps:
      # This step is important to make sure scalafmt 
      # checks don't fail
      - name: Setup git config
        run: git config --global core.autocrlf false
        if: runner.os == 'Windows'

      - uses: actions/checkout@v2
      - uses: coursier/cache-action@v6      
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin' 
          java-version: '17'

      - name: Setup Unix-like
        run: ./build/setup_unix.sh
        if: runner.os != 'Windows'

      # See https://github.com/scala-native/scala-native/blob/master/.github/actions/windows-setup-env/action.yml#L14 
      # for details
      - name: Configure Pagefile
        uses: al-cheb/configure-pagefile-action@v1.2
        with:
          minimum-size: 4GB
          maximum-size: 16GB
        if: runner.os == 'Windows'

      - name: Setup windows
        shell: pwsh
        run: |
          choco install llvm --version=13.0.0 --allow-downgrade
          choco install sbt --version=1.6.1
          clang --version
        if: runner.os == 'Windows'

      - name: CI (unix-like)
        run: sbt "show nativeConfig" ci examples/compile
        if: runner.os != 'Windows'
        env: 
          LLVM_BIN: ${{ matrix.llvm_bin_path }}
      
      # Can't make shell type come from a matrix parameter: 
      # https://github.community/t/using-matrix-to-specify-shell-is-it-possible/17065/2
      - name: CI (windows)
        run: sbt "show nativeConfig" ci examples/compile
        shell: cmd
        if: runner.os == 'Windows'
        env: 
          LLVM_BIN: ${{ matrix.llvm_bin_path }}

      - name: Upload artifacts
        uses: actions/upload-artifact@master
        with:
          path: bindgen/target/scala-3.1.1/${{ matrix.output_filename }}
          name: ${{ matrix.uploaded_filename }}
  
      
  pre_release_check:
    needs: [build]
    name: Check releasable artifacts
    runs-on: ubuntu-latest
    env: 
      BINARIES: /tmp/binaries/
    steps:
      - uses: actions/checkout@v2
      - uses: coursier/cache-action@v6

      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          path: /tmp/binaries

      - name: Check published artifacts
        run: |
          sbt versionDump binaryArtifacts/publishLocal iface3/publishLocal iface/publishLocal iface2_12/publishLocal
          curl -fLo cs https://git.io/coursier-cli-"$(uname | tr LD ld)"
          chmod +x cs
          ./cs resolve com.indoorvivants:bindgen-interface_2.13:$(cat version)
          ./cs resolve com.indoorvivants:bindgen-interface_3:$(cat version)
          ./cs resolve com.indoorvivants:bindgen-interface_2.12:$(cat version)
          ./cs fetch com.indoorvivants:bindgen_native0.4_3:$(cat version) --classifier osx-x86_64 --artifact-type jar
          ./cs fetch com.indoorvivants:bindgen_native0.4_3:$(cat version) --classifier linux-x86_64 --artifact-type jar
          ./cs fetch com.indoorvivants:bindgen_native0.4_3:$(cat version) --classifier windows-x86_64 --artifact-type jar

  release:
    needs: [pre_release_check]
    name: Release
    if: startsWith(github.ref, 'refs/tags/v') || (github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    env: 
      BINARIES: /tmp/binaries/
    steps:
      - uses: actions/checkout@v2
      - uses: coursier/cache-action@v6
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin' 
          java-version: '17'

      - run: git fetch --unshallow

      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          path: /tmp/binaries

      - name: Publish
        run: |
          sbt ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
